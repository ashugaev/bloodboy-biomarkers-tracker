# React Component Structure

## Component Structure Pattern
Every component in its own folder:

```
ComponentName/
├── ComponentName.tsx       # Main component file (required)
├── ComponentName.types.ts  # TypeScript types (required)
├── ComponentName.utils.ts  # ALL helper functions for this component (optional)
├── ComponentName.hooks.ts  # Custom hooks (optional)
└── index.ts                # Exports (required)
```

### File Rules:
- **ComponentName.tsx**: Component logic only
- **ComponentName.types.ts**: All TypeScript interfaces/types
- **ComponentName.utils.ts**: All helper functions (multiple allowed)
- **ComponentName.hooks.ts**: All custom hooks (multiple allowed)
- **index.ts**: Export all public APIs

## Component Template (ComponentName.tsx)

```tsx
import cn from 'classnames'

import { ComponentNameProps } from './ComponentName.types'

export const ComponentName = (props: ComponentNameProps) => {
    const { className } = props

    return (
        <div className={cn('p-4 bg-white rounded', className)}>
            ComponentName
        </div>
    )
}
```

## Types Template (ComponentName.types.ts)

```tsx
export interface ComponentNameProps {
    className?: string
}
```

## Index Template (index.ts)

```tsx
export * from './ComponentName'
export * from './ComponentName.types'
export * from './ComponentName.utils'
```

## Styling with Tailwind CSS

Use Tailwind utility classes directly in className:
```tsx
// Layout
className='flex items-center justify-between'

// Spacing
className='p-4 m-2 gap-4'

// Colors (use theme colors when possible)
className='bg-primary text-white'

// Responsive
className='text-sm md:text-base lg:text-lg'

// States
className='hover:bg-gray-100 focus:outline-none'
```

## Rules

### Structure:
- One component = one folder (no standalone .tsx files)
- All files named ComponentName.* (PascalCase)
- All exports go through index.ts

### Code Organization:
- Component logic → ComponentName.tsx
- All types → ComponentName.types.ts (one file)
- All helper functions → ComponentName.utils.ts (one file, multiple functions allowed)
- All custom hooks → ComponentName.hooks.ts (one file, multiple hooks allowed)

### Code Style:
- Named exports only (no default exports)
- Always include className prop for composition
- Use classnames (cn) for combining Tailwind classes
- Prefer Tailwind utilities over custom CSS
